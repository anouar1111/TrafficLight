// Code generated by Umple 1.30.1.5099.60569f335

digraph "TrafficLight" {
  compound = true;
  size="80,10"

  // Class: TrafficLight

    // Top Level StateMachine: status
    
    // Start states are shown as a black circle
    node [shape = point, fillcolor="black", width=0.2 ];
    start_TrafficLight_status [ tooltip = "Class TrafficLight, SM status, State start" ];
    
        
    // Format for normal states
    node [shape = rectangle, width=1,style=rounded];
    
      // State: defaultMode

     subgraph clusterTrafficLight_status_defaultMode {
      label = "defaultMode";
      style = rounded;

      // Bottom Level StateMachine: defaultMode
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_TrafficLight_statusDefaultMode [ tooltip = "Class TrafficLight, SM status, State defaultMode.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: northAndSouthGreen

        TrafficLight_statusDefaultMode_northAndSouthGreen [label = northAndSouthGreen, tooltip = "Class TrafficLight, SM status, State defaultMode.northAndSouthGreen&#13;Entry:
   trafficLightManager.northGreen();&#13;Entry:
   trafficLightManager.southGreen();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northAndSouthGreen

        // State: northAndSouthYellow

        TrafficLight_statusDefaultMode_northAndSouthYellow [label = northAndSouthYellow, tooltip = "Class TrafficLight, SM status, State defaultMode.northAndSouthYellow&#13;Entry:
   trafficLightManager.northYellow();&#13;Entry:
   trafficLightManager.southYellow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northAndSouthYellow

        // State: northAndSouthRed

        TrafficLight_statusDefaultMode_northAndSouthRed [label = northAndSouthRed, tooltip = "Class TrafficLight, SM status, State defaultMode.northAndSouthRed&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westGreen();&#13;Entry:
   trafficLightManager.eastGreen();"];
        // End State: northAndSouthRed

        // State: westAndEastYellow

        TrafficLight_statusDefaultMode_westAndEastYellow [label = westAndEastYellow, tooltip = "Class TrafficLight, SM status, State defaultMode.westAndEastYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westYellow();&#13;Entry:
   trafficLightManager.eastYellow();"];
        // End State: westAndEastYellow
      // End Bottom Level StateMachine: defaultMode
     }
      // End State: defaultMode

      // State: lowTraffic

     subgraph clusterTrafficLight_status_lowTraffic {
      label = "lowTraffic";
      style = rounded;

      // Bottom Level StateMachine: lowTraffic
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_TrafficLight_statusLowTraffic [ tooltip = "Class TrafficLight, SM status, State lowTraffic.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: northAndSouthArrow

        TrafficLight_statusLowTraffic_northAndSouthArrow [label = northAndSouthArrow, tooltip = "Class TrafficLight, SM status, State lowTraffic.northAndSouthArrow&#13;Entry:
   trafficLightManager.northArrow();&#13;Entry:
   trafficLightManager.southArrow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northAndSouthArrow

        // State: northAndSouthGreen

        TrafficLight_statusLowTraffic_northAndSouthGreen [label = northAndSouthGreen, tooltip = "Class TrafficLight, SM status, State lowTraffic.northAndSouthGreen&#13;Entry:
   trafficLightManager.northGreen();&#13;Entry:
   trafficLightManager.southGreen();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northAndSouthGreen

        // State: northAndSouthYellow

        TrafficLight_statusLowTraffic_northAndSouthYellow [label = northAndSouthYellow, tooltip = "Class TrafficLight, SM status, State lowTraffic.northAndSouthYellow&#13;Entry:
   trafficLightManager.northYellow();&#13;Entry:
   trafficLightManager.southYellow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northAndSouthYellow

        // State: westAndEastGreen

        TrafficLight_statusLowTraffic_westAndEastGreen [label = westAndEastGreen, tooltip = "Class TrafficLight, SM status, State lowTraffic.westAndEastGreen&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westGreen();&#13;Entry:
   trafficLightManager.eastGreen();"];
        // End State: westAndEastGreen

        // State: westAndEastYellow

        TrafficLight_statusLowTraffic_westAndEastYellow [label = westAndEastYellow, tooltip = "Class TrafficLight, SM status, State lowTraffic.westAndEastYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westYellow();&#13;Entry:
   trafficLightManager.eastYellow();"];
        // End State: westAndEastYellow
      // End Bottom Level StateMachine: lowTraffic
     }
      // End State: lowTraffic

      // State: moderateTraffic

     subgraph clusterTrafficLight_status_moderateTraffic {
      label = "moderateTraffic";
      style = rounded;

      // Bottom Level StateMachine: moderateTraffic
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_TrafficLight_statusModerateTraffic [ tooltip = "Class TrafficLight, SM status, State moderateTraffic.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: northGreenAndArrow

        TrafficLight_statusModerateTraffic_northGreenAndArrow [label = northGreenAndArrow, tooltip = "Class TrafficLight, SM status, State moderateTraffic.northGreenAndArrow&#13;Entry:
   trafficLightManager.northGreenAndArrow();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northGreenAndArrow

        // State: northYellow

        TrafficLight_statusModerateTraffic_northYellow [label = northYellow, tooltip = "Class TrafficLight, SM status, State moderateTraffic.northYellow&#13;Entry:
   trafficLightManager.northYellow();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northYellow

        // State: southGreenAndArrow

        TrafficLight_statusModerateTraffic_southGreenAndArrow [label = southGreenAndArrow, tooltip = "Class TrafficLight, SM status, State moderateTraffic.southGreenAndArrow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southGreenAndArrow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: southGreenAndArrow

        // State: southYellow

        TrafficLight_statusModerateTraffic_southYellow [label = southYellow, tooltip = "Class TrafficLight, SM status, State moderateTraffic.southYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southYellow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: southYellow

        // State: westAndEastGreen

        TrafficLight_statusModerateTraffic_westAndEastGreen [label = westAndEastGreen, tooltip = "Class TrafficLight, SM status, State moderateTraffic.westAndEastGreen&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westGreen();&#13;Entry:
   trafficLightManager.eastGreen();"];
        // End State: westAndEastGreen

        // State: westAndEastYellow

        TrafficLight_statusModerateTraffic_westAndEastYellow [label = westAndEastYellow, tooltip = "Class TrafficLight, SM status, State moderateTraffic.westAndEastYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westYellow();&#13;Entry:
   trafficLightManager.eastYellow();"];
        // End State: westAndEastYellow
      // End Bottom Level StateMachine: moderateTraffic
     }
      // End State: moderateTraffic

      // State: highTraffic

     subgraph clusterTrafficLight_status_highTraffic {
      label = "highTraffic";
      style = rounded;

      // Bottom Level StateMachine: highTraffic
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_TrafficLight_statusHighTraffic [ tooltip = "Class TrafficLight, SM status, State highTraffic.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: northGreenAndArrow

        TrafficLight_statusHighTraffic_northGreenAndArrow [label = northGreenAndArrow, tooltip = "Class TrafficLight, SM status, State highTraffic.northGreenAndArrow&#13;Entry:
   trafficLightManager.northGreenAndArrow();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northGreenAndArrow

        // State: northYellow

        TrafficLight_statusHighTraffic_northYellow [label = northYellow, tooltip = "Class TrafficLight, SM status, State highTraffic.northYellow&#13;Entry:
   trafficLightManager.northYellow();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: northYellow

        // State: southGreenAndArrow

        TrafficLight_statusHighTraffic_southGreenAndArrow [label = southGreenAndArrow, tooltip = "Class TrafficLight, SM status, State highTraffic.southGreenAndArrow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southGreenAndArrow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: southGreenAndArrow

        // State: southYellow

        TrafficLight_statusHighTraffic_southYellow [label = southYellow, tooltip = "Class TrafficLight, SM status, State highTraffic.southYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southYellow();&#13;Entry:
   trafficLightManager.westRed();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: southYellow

        // State: westGreenAndArrow

        TrafficLight_statusHighTraffic_westGreenAndArrow [label = westGreenAndArrow, tooltip = "Class TrafficLight, SM status, State highTraffic.westGreenAndArrow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westGreenAndArrow();&#13;Entry:
   trafficLightManager.eastRed();"];
        // End State: westGreenAndArrow

        // State: westAndEastGreen

        TrafficLight_statusHighTraffic_westAndEastGreen [label = westAndEastGreen, tooltip = "Class TrafficLight, SM status, State highTraffic.westAndEastGreen&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westGreen();&#13;Entry:
   trafficLightManager.eastGreen();"];
        // End State: westAndEastGreen

        // State: westAndEastYellow

        TrafficLight_statusHighTraffic_westAndEastYellow [label = westAndEastYellow, tooltip = "Class TrafficLight, SM status, State highTraffic.westAndEastYellow&#13;Entry:
   trafficLightManager.northRed();&#13;Entry:
   trafficLightManager.southRed();&#13;Entry:
   trafficLightManager.westYellow();&#13;Entry:
   trafficLightManager.eastYellow();"];
        // End State: westAndEastYellow
      // End Bottom Level StateMachine: highTraffic
     }
      // End State: highTraffic
    // End Top Level StateMachine: status

  // All transitions
    start_TrafficLight_status -> TrafficLight_statusDefaultMode_northAndSouthGreen [  lhead=clusterTrafficLight_status_defaultMode,  tooltip = "start to defaultMode" ] ;
    TrafficLight_statusLowTraffic_northAndSouthArrow -> TrafficLight_statusDefaultMode_northAndSouthGreen [  ltail=clusterTrafficLight_status_lowTraffic,lhead=clusterTrafficLight_status_defaultMode,  label = "defaultMode", tooltip = "From lowTraffic to defaultMode on defaultMode" ] ;
  
  TrafficLight_statusModerateTraffic_northGreenAndArrow -> TrafficLight_statusDefaultMode_northAndSouthGreen [  ltail=clusterTrafficLight_status_moderateTraffic,lhead=clusterTrafficLight_status_defaultMode,  label = "defaultMode", tooltip = "From moderateTraffic to defaultMode on defaultMode" ] ;
  
  TrafficLight_statusHighTraffic_northGreenAndArrow -> TrafficLight_statusDefaultMode_northAndSouthGreen [  ltail=clusterTrafficLight_status_highTraffic,lhead=clusterTrafficLight_status_defaultMode,  label = "defaultMode", tooltip = "From highTraffic to defaultMode on defaultMode" ] ;
  
  start_TrafficLight_statusDefaultMode -> TrafficLight_statusDefaultMode_northAndSouthGreen [  tooltip = "start to defaultMode.northAndSouthGreen" ] ;
    TrafficLight_statusDefaultMode_westAndEastYellow -> TrafficLight_statusDefaultMode_northAndSouthGreen [  label = "timerYellow", tooltip = "From defaultMode.westAndEastYellow to defaultMode.northAndSouthGreen on timerYellow" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthGreen -> TrafficLight_statusDefaultMode_northAndSouthYellow [  label = "timerGreen", tooltip = "From defaultMode.northAndSouthGreen to defaultMode.northAndSouthYellow on timerGreen" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthYellow -> TrafficLight_statusDefaultMode_northAndSouthRed [  label = "timerYellow", tooltip = "From defaultMode.northAndSouthYellow to defaultMode.northAndSouthRed on timerYellow" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthRed -> TrafficLight_statusDefaultMode_westAndEastYellow [  label = "timerGreen", tooltip = "From defaultMode.northAndSouthRed to defaultMode.westAndEastYellow on timerGreen" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthGreen -> TrafficLight_statusLowTraffic_northAndSouthArrow [  ltail=clusterTrafficLight_status_defaultMode,lhead=clusterTrafficLight_status_lowTraffic,  label = "lowTraffic", tooltip = "From defaultMode to lowTraffic on lowTraffic" ] ;
  
  TrafficLight_statusModerateTraffic_northGreenAndArrow -> TrafficLight_statusLowTraffic_northAndSouthArrow [  ltail=clusterTrafficLight_status_moderateTraffic,lhead=clusterTrafficLight_status_lowTraffic,  label = "lowTraffic", tooltip = "From moderateTraffic to lowTraffic on lowTraffic" ] ;
  
  TrafficLight_statusHighTraffic_northGreenAndArrow -> TrafficLight_statusLowTraffic_northAndSouthArrow [  ltail=clusterTrafficLight_status_highTraffic,lhead=clusterTrafficLight_status_lowTraffic,  label = "lowTraffic", tooltip = "From highTraffic to lowTraffic on lowTraffic" ] ;
  
  start_TrafficLight_statusLowTraffic -> TrafficLight_statusLowTraffic_northAndSouthArrow [  tooltip = "start to lowTraffic.northAndSouthArrow" ] ;
    TrafficLight_statusLowTraffic_westAndEastYellow -> TrafficLight_statusLowTraffic_northAndSouthArrow [  label = "timerYellow", tooltip = "From lowTraffic.westAndEastYellow to lowTraffic.northAndSouthArrow on timerYellow" ] ;
  
  TrafficLight_statusLowTraffic_northAndSouthArrow -> TrafficLight_statusLowTraffic_northAndSouthGreen [  label = "timerGreen", tooltip = "From lowTraffic.northAndSouthArrow to lowTraffic.northAndSouthGreen on timerGreen" ] ;
  
  TrafficLight_statusLowTraffic_northAndSouthGreen -> TrafficLight_statusLowTraffic_northAndSouthYellow [  label = "timerGreen", tooltip = "From lowTraffic.northAndSouthGreen to lowTraffic.northAndSouthYellow on timerGreen" ] ;
  
  TrafficLight_statusLowTraffic_northAndSouthYellow -> TrafficLight_statusLowTraffic_westAndEastGreen [  label = "timerYellow", tooltip = "From lowTraffic.northAndSouthYellow to lowTraffic.westAndEastGreen on timerYellow" ] ;
  
  TrafficLight_statusLowTraffic_westAndEastGreen -> TrafficLight_statusLowTraffic_westAndEastYellow [  label = "timerGreen", tooltip = "From lowTraffic.westAndEastGreen to lowTraffic.westAndEastYellow on timerGreen" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthGreen -> TrafficLight_statusModerateTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_defaultMode,lhead=clusterTrafficLight_status_moderateTraffic,  label = "moderateTraffic", tooltip = "From defaultMode to moderateTraffic on moderateTraffic" ] ;
  
  TrafficLight_statusLowTraffic_northAndSouthArrow -> TrafficLight_statusModerateTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_lowTraffic,lhead=clusterTrafficLight_status_moderateTraffic,  label = "moderateTraffic", tooltip = "From lowTraffic to moderateTraffic on moderateTraffic" ] ;
  
  TrafficLight_statusHighTraffic_northGreenAndArrow -> TrafficLight_statusModerateTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_highTraffic,lhead=clusterTrafficLight_status_moderateTraffic,  label = "moderateTraffic", tooltip = "From highTraffic to moderateTraffic on moderateTraffic" ] ;
  
  start_TrafficLight_statusModerateTraffic -> TrafficLight_statusModerateTraffic_northGreenAndArrow [  tooltip = "start to moderateTraffic.northGreenAndArrow" ] ;
    TrafficLight_statusModerateTraffic_westAndEastYellow -> TrafficLight_statusModerateTraffic_northGreenAndArrow [  label = "timerYellow", tooltip = "From moderateTraffic.westAndEastYellow to moderateTraffic.northGreenAndArrow on timerYellow" ] ;
  
  TrafficLight_statusModerateTraffic_northGreenAndArrow -> TrafficLight_statusModerateTraffic_northYellow [  label = "timerGreen", tooltip = "From moderateTraffic.northGreenAndArrow to moderateTraffic.northYellow on timerGreen" ] ;
  
  TrafficLight_statusModerateTraffic_northYellow -> TrafficLight_statusModerateTraffic_southGreenAndArrow [  label = "timerYellow", tooltip = "From moderateTraffic.northYellow to moderateTraffic.southGreenAndArrow on timerYellow" ] ;
  
  TrafficLight_statusModerateTraffic_southGreenAndArrow -> TrafficLight_statusModerateTraffic_southYellow [  label = "timerGreen", tooltip = "From moderateTraffic.southGreenAndArrow to moderateTraffic.southYellow on timerGreen" ] ;
  
  TrafficLight_statusModerateTraffic_southYellow -> TrafficLight_statusModerateTraffic_westAndEastGreen [  label = "timerYellow", tooltip = "From moderateTraffic.southYellow to moderateTraffic.westAndEastGreen on timerYellow" ] ;
  
  TrafficLight_statusModerateTraffic_westAndEastGreen -> TrafficLight_statusModerateTraffic_westAndEastYellow [  label = "timerGreen", tooltip = "From moderateTraffic.westAndEastGreen to moderateTraffic.westAndEastYellow on timerGreen" ] ;
  
  TrafficLight_statusDefaultMode_northAndSouthGreen -> TrafficLight_statusHighTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_defaultMode,lhead=clusterTrafficLight_status_highTraffic,  label = "highTraffic", tooltip = "From defaultMode to highTraffic on highTraffic" ] ;
  
  TrafficLight_statusLowTraffic_northAndSouthArrow -> TrafficLight_statusHighTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_lowTraffic,lhead=clusterTrafficLight_status_highTraffic,  label = "highTraffic", tooltip = "From lowTraffic to highTraffic on highTraffic" ] ;
  
  TrafficLight_statusModerateTraffic_northGreenAndArrow -> TrafficLight_statusHighTraffic_northGreenAndArrow [  ltail=clusterTrafficLight_status_moderateTraffic,lhead=clusterTrafficLight_status_highTraffic,  label = "highTraffic", tooltip = "From moderateTraffic to highTraffic on highTraffic" ] ;
  
  start_TrafficLight_statusHighTraffic -> TrafficLight_statusHighTraffic_northGreenAndArrow [  tooltip = "start to highTraffic.northGreenAndArrow" ] ;
    TrafficLight_statusHighTraffic_westAndEastYellow -> TrafficLight_statusHighTraffic_northGreenAndArrow [  label = "timerYellow", tooltip = "From highTraffic.westAndEastYellow to highTraffic.northGreenAndArrow on timerYellow" ] ;
  
  TrafficLight_statusHighTraffic_northGreenAndArrow -> TrafficLight_statusHighTraffic_northYellow [  label = "timerGreen", tooltip = "From highTraffic.northGreenAndArrow to highTraffic.northYellow on timerGreen" ] ;
  
  TrafficLight_statusHighTraffic_northYellow -> TrafficLight_statusHighTraffic_southGreenAndArrow [  label = "timerYellow", tooltip = "From highTraffic.northYellow to highTraffic.southGreenAndArrow on timerYellow" ] ;
  
  TrafficLight_statusHighTraffic_southGreenAndArrow -> TrafficLight_statusHighTraffic_southYellow [  label = "timerGreen", tooltip = "From highTraffic.southGreenAndArrow to highTraffic.southYellow on timerGreen" ] ;
  
  TrafficLight_statusHighTraffic_southYellow -> TrafficLight_statusHighTraffic_westGreenAndArrow [  label = "timerYellow", tooltip = "From highTraffic.southYellow to highTraffic.westGreenAndArrow on timerYellow" ] ;
  
  TrafficLight_statusHighTraffic_westGreenAndArrow -> TrafficLight_statusHighTraffic_westAndEastGreen [  label = "timerGreen", tooltip = "From highTraffic.westGreenAndArrow to highTraffic.westAndEastGreen on timerGreen" ] ;
  
  TrafficLight_statusHighTraffic_westAndEastGreen -> TrafficLight_statusHighTraffic_westAndEastYellow [  label = "timerGreen", tooltip = "From highTraffic.westAndEastGreen to highTraffic.westAndEastYellow on timerGreen" ] ;
  

}
